/*
 * generated by Xtext
 */
package de.fhb.mdsd.generator

import com.google.inject.Inject
import de.fhb.mdsd.mobile.Activity
import de.fhb.mdsd.mobile.App
import de.fhb.mdsd.mobile.Row
import de.fhb.mdsd.mobile.Tab
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.naming.IQualifiedNameProvider

class MobileGenerator implements IGenerator {
	
	@Inject extension IQualifiedNameProvider
 
  	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
    	fsa.generateFile("../AndroidManifest.xml", resource.compileManifest);
    	fsa.generateFile("../res/values/styles.xml", resource.allContents.filter(typeof(App)).head.compileStyles)
    	
    	for(a : resource.allContents.toIterable.filter(typeof(Activity))) {
      		fsa.generateFile(resource.allContents.filter(typeof(App)).head.packageName.replace(".", "/") + "/" + a.name.toFirstUpper + "Activity.java", a.compile)
      		fsa.generateFile("../res/layout/" + a.name.toLowerCase + ".xml", a.compileLayout)
    	}
    }
  
  	def compileManifest(Resource resource) '''
		<?xml version="1.0" encoding="utf-8"?>
		<manifest xmlns:android="http://schemas.android.com/apk/res/android"
			package="«resource.allContents.filter(typeof(App)).head.packageName»"
			android:versionCode="1"
			android:versionName="1.0" >
		
			<uses-sdk
				android:minSdkVersion="14"
				android:targetSdkVersion="17" />

			<application
				android:allowBackup="true"
				android:icon="@drawable/ic_launcher"
				android:label="@string/app_name"
				android:theme="@style/AppTheme" >
				«FOR a : resource.allContents.toIterable.filter(typeof(Activity))»
				«IF a.label != null»
				<activity
					android:name="«a.name.toFirstUpper»Activity"
					android:label="«a.label»" >
				«ELSE»
				<activity android:name="«a.name.toFirstUpper»Activity" >
				«ENDIF»
					«IF a.main != null»
					<intent-filter>
						<action android:name="android.intent.action.MAIN" />
						
						<category android:name="android.intent.category.LAUNCHER" />
					</intent-filter>
					«ENDIF»
				</activity>
	        	«ENDFOR»
		</application>

		</manifest>
  	'''

	def compileStyles(App app) '''
		<resources>
			
			«IF app.design.equals("light")»
			<style name="AppTheme" parent="android:Theme.Holo.Light" />
			«ELSEIF app.design.equals("dark")»
			<style name="AppTheme" parent="android:Theme.Holo" />
			«ELSEIF app.design.equals("light with dark action bar")»
			<style name="AppTheme" parent="android:Theme.Holo.Light.DarkActionBar" />
			«ELSE»
			<style name="AppTheme" parent="android:Theme.Holo.Light" />
			«ENDIF»
		
		</resources>
	'''
  	  
	def compile(Activity a) '''
		«IF a.eContainer != null»
		package «a.eContainer.eAllContents.toIterable.filter(typeof(App)).head.packageName»;
		«ENDIF»
		
		import android.app.ActionBar;
		import android.app.FragmentTransaction;
		import android.content.Intent;
		import android.os.Bundle;
		import android.support.v4.app.Fragment;
		import android.support.v4.app.FragmentActivity;
		import android.support.v4.app.FragmentManager;
		import android.support.v4.app.FragmentPagerAdapter;
		import android.support.v4.view.ViewPager;
		import android.view.Gravity;
		import android.view.LayoutInflater;
		import android.view.Menu;
		import android.view.View;
		import android.view.ViewGroup;
		import android.widget.ArrayAdapter;
		import android.widget.TextView;
		
		public class «a.name»Activity extends FragmentActivity «IF a.navigationType.elements.filter(typeof(Tab)).size > 0»implements ActionBar.TabListener «ELSEIF a.navigationType.elements.filter(typeof(Row)).size > 0»implements ActionBar.OnNavigationListener «ENDIF»{
			
			«IF a.navigationType.elements.filter(typeof(Tab)).size > 0»
			PagerAdapter mPagerAdapter;
			
			ViewPager mViewPager;
			
			«ENDIF»
			@Override
			protected void onCreate(Bundle savedInstanceState) {
				super.onCreate(savedInstanceState);
				setContentView(R.layout.«a.name.toLowerCase»);
				
				final ActionBar actionBar = getActionBar();
				«IF a.navigationType.elements.filter(typeof(Row)).size > 0»
				actionBar.setDisplayShowTitleEnabled(false);
				«ENDIF»
				«IF a.navigationType.elements.filter(typeof(Tab)).size > 0»
				actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);
				
				mPagerAdapter = new PagerAdapter(getSupportFragmentManager());
				
				mViewPager = (ViewPager) findViewById(R.id.pager);
				mViewPager.setAdapter(mPagerAdapter);

				mViewPager.setOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener() {
					@Override
					public void onPageSelected(int position) {
						actionBar.setSelectedNavigationItem(position);
					}
				});
				
				«FOR t : a.navigationType.elements.filter(typeof(Tab))»
				actionBar.addTab(actionBar.newTab().setText("«t.text.toUpperCase»").setTabListener(this));
				«ENDFOR»
				«FOR t : a.navigationType.elements.filter(typeof(Tab))»
				«IF t.selected != null»
				actionBar.setSelectedNavigationItem(«a.navigationType.elements.indexOf(t)»);
				«ENDIF»
				«ENDFOR»
				«ELSEIF a.navigationType.elements.filter(typeof(Row)).size > 0»
				actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);
				
				actionBar.setListNavigationCallbacks(
					new ArrayAdapter<String>(
						actionBar.getThemedContext(),
						android.R.layout.simple_list_item_1, android.R.id.text1,
						new String[] {
							«FOR r : a.navigationType.elements.filter(typeof(Row))»
							"«r.text.toFirstUpper»",
							«ENDFOR»
						}),
					this);
				«FOR r : a.navigationType.elements.filter(typeof(Row))»
				«IF r.selected != null»
				actionBar.setSelectedNavigationItem(«a.navigationType.elements.indexOf(r)»);
				«ENDIF»
				«ENDFOR»
				«ENDIF»
			}
			
			«IF a.navigationType.elements.filter(typeof(Tab)).size > 0»
			@Override
			public void onTabUnselected(ActionBar.Tab tab, FragmentTransaction ft) {
			}
			
			@Override
			public void onTabSelected(ActionBar.Tab tab, FragmentTransaction ft) {
				mViewPager.setCurrentItem(tab.getPosition());
			}
			
			@Override
			public void onTabReselected(ActionBar.Tab tab, FragmentTransaction ft) {
			}
			
			public class PagerAdapter extends FragmentPagerAdapter {
				
				public PagerAdapter(FragmentManager fm) {
					super(fm);
				}
				
				@Override
				public Fragment getItem(int position) {
					Fragment fragment = new DummySectionFragment();
					Bundle args = new Bundle();
					args.putInt(DummySectionFragment.ARG_SECTION_NUMBER, position + 1);
					fragment.setArguments(args);
					return fragment;
				}

				@Override
				public int getCount() {
					return 3;
				}
				
				@Override
				public CharSequence getPageTitle(int position) {
					return getActionBar().getTabAt(position).getText().toString().toUpperCase();
				}
			}
			
			«ELSEIF a.navigationType.elements.filter(typeof(Row)).size > 0»
			@Override
			public boolean onNavigationItemSelected(int position, long id) {
				Fragment fragment = new DummySectionFragment();
				Bundle args = new Bundle();
				args.putInt(DummySectionFragment.ARG_SECTION_NUMBER, position + 1);
				fragment.setArguments(args);
				getSupportFragmentManager().beginTransaction().replace(R.id.container, fragment).commit();
				return true;
			}
			
			«ENDIF»
			
			«IF a.navigationType.elements.size > 0»
			public static class DummySectionFragment extends Fragment {

				public static final String ARG_SECTION_NUMBER = "section_number";
				
				public DummySectionFragment() {
				}
				
				@Override
				public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
					TextView textView = new TextView(getActivity());
					textView.setGravity(Gravity.CENTER);
					textView.setText(Integer.toString(getArguments().getInt(ARG_SECTION_NUMBER)));
					return textView;
				}
			}
			«ENDIF»
		}
	'''
	
	def compileLayout(Activity a) '''
		«IF a.navigationType.elements.filter(typeof(Tab)).size > 0»
		<android.support.v4.view.ViewPager xmlns:android="http://schemas.android.com/apk/res/android"
			android:id="@+id/pager"
			android:layout_width="match_parent"
			android:layout_height="match_parent" />
		«ELSEIF a.navigationType.elements.filter(typeof(Row)).size > 0»
		<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
			android:id="@+id/container"
			android:layout_width="match_parent"
			android:layout_height="match_parent" />
		«ENDIF»
	'''
}